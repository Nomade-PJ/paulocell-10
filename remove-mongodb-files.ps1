# Script PowerShell para remover arquivos relacionados ao MongoDB

Write-Host "üßπ Script de limpeza de arquivos legados do MongoDB" -ForegroundColor Cyan
Write-Host "Este script ir√° remover arquivos relacionados ao MongoDB que n√£o s√£o mais necess√°rios." -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è ATEN√á√ÉO: Certifique-se de que a migra√ß√£o para o Supabase est√° conclu√≠da e funcionando." -ForegroundColor Red

$confirmation = Read-Host "Tem certeza que deseja continuar? Esta a√ß√£o n√£o pode ser desfeita. (s/n)"
if ($confirmation -ne "s") {
    Write-Host "Opera√ß√£o cancelada pelo usu√°rio." -ForegroundColor Yellow
    exit
}

# Lista de arquivos a serem removidos
$filesToRemove = @(
    "api\db-initialize.js",
    "api\debug-database.js",
    "src\services\realtimeService.js",
    "models\mongoose.js",
    "src\services\api.js"
)

# Verificar se existem arquivos de configura√ß√£o MongoDB
$configFilesToCheck = @(
    "mongo-setup.js",
    "mongoDB.config.js"
)

# Adicionar arquivos de configura√ß√£o se existirem
foreach ($configFile in $configFilesToCheck) {
    if (Test-Path $configFile) {
        $filesToRemove += $configFile
    }
}

Write-Host "`nüîç Arquivos que ser√£o removidos:" -ForegroundColor Cyan
foreach ($file in $filesToRemove) {
    Write-Host "- $file"
}

$finalConfirmation = Read-Host "`n‚ùì Confirmar exclus√£o destes arquivos? (s/n)"
if ($finalConfirmation -ne "s") {
    Write-Host "Opera√ß√£o cancelada pelo usu√°rio." -ForegroundColor Yellow
    exit
}

# Fazer backup antes de excluir
try {
    $backupDir = "backup-mongodb"
    if (-not (Test-Path $backupDir)) {
        New-Item -Path $backupDir -ItemType Directory
    }
    
    Write-Host "`nüì¶ Criando backup dos arquivos..." -ForegroundColor Cyan
    foreach ($file in $filesToRemove) {
        if (Test-Path $file) {
            $fileName = Split-Path $file -Leaf
            $destPath = Join-Path $backupDir $fileName
            Copy-Item $file $destPath
            Write-Host "‚úÖ Backup criado: $destPath" -ForegroundColor Green
        }
    }
    
    # Remover arquivos
    Write-Host "`nüóëÔ∏è Removendo arquivos..." -ForegroundColor Cyan
    foreach ($file in $filesToRemove) {
        if (Test-Path $file) {
            Remove-Item $file -Force
            Write-Host "‚úÖ Removido: $file" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Arquivo n√£o encontrado: $file" -ForegroundColor Yellow
        }
    }
    
    Write-Host "`n‚úÖ Limpeza conclu√≠da com sucesso!" -ForegroundColor Green
    Write-Host "Um backup dos arquivos removidos foi criado em: $backupDir" -ForegroundColor Cyan
    
    # Perguntar se deseja fazer commit das altera√ß√µes
    $commitAnswer = Read-Host "`n‚ùì Deseja fazer commit das altera√ß√µes? (s/n)"
    if ($commitAnswer -eq "s") {
        try {
            Write-Host "`nüìù Realizando commit das altera√ß√µes..." -ForegroundColor Cyan
            git add .
            git commit -m "Limpeza ap√≥s migra√ß√£o para Supabase"
            Write-Host "‚úÖ Commit realizado com sucesso!" -ForegroundColor Green
            
            $pushAnswer = Read-Host "`n‚ùì Deseja enviar as altera√ß√µes para o reposit√≥rio remoto? (s/n)"
            if ($pushAnswer -eq "s") {
                try {
                    Write-Host "`nüì§ Enviando altera√ß√µes para o reposit√≥rio remoto..." -ForegroundColor Cyan
                    git push origin main
                    Write-Host "‚úÖ Altera√ß√µes enviadas com sucesso!" -ForegroundColor Green
                } catch {
                    Write-Host "‚ùå Erro ao enviar altera√ß√µes: $_" -ForegroundColor Red
                }
            } else {
                Write-Host "Opera√ß√£o de push cancelada pelo usu√°rio." -ForegroundColor Yellow
            }
        } catch {
            Write-Host "‚ùå Erro ao fazer commit: $_" -ForegroundColor Red
        }
    } else {
        Write-Host "Opera√ß√£o de commit cancelada pelo usu√°rio." -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Erro durante o processo de limpeza: $_" -ForegroundColor Red
} 